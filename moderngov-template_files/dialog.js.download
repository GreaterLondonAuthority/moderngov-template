/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal, drupalSettings) {
  drupalSettings.dialog = {
    autoOpen: true,
    dialogClass: '',
    buttonClass: 'button',
    buttonPrimaryClass: 'button--primary',
    close: function close(event) {
      Drupal.dialog(event.target).close();
      Drupal.detachBehaviors(event.target, null, 'unload');
    }
  };

  Drupal.dialog = function (element, options) {
    var undef;
    var $element = $(element);
    var $body = $('body');
    var originalBodyPad = '';
    var dialog = {
      open: false,
      returnValue: undef
    };

    function openDialog(settings) {
      settings = $.extend({}, drupalSettings.dialog, options, settings);
      $(window).trigger('dialog:beforecreate', [dialog, $element, settings]);

      // Store the current body padding to undo any changes we may do.
      var $body = $('body');
      originalBodyPad = $body.css('padding-right');
      $body.data('drupal-dialog-padding', originalBodyPad);

      // Add body classes to indicate that the dialog is open.
      $body.addClass('drupal-dialog-open');
      // Add an additional class if a modal is open.
      if (settings.modal) {
        setScrollbarPadding();
        $body.addClass('drupal-dialog-open-modal');
      }

      $element.dialog(settings);
      dialog.open = true;
      $(window).trigger('dialog:aftercreate', [dialog, $element, settings]);
    }

    function closeDialog(value) {
      $(window).trigger('dialog:beforeclose', [dialog, $element]);

      // Remove the body classes we add in openDialog().
      $body.removeClass('drupal-dialog-open drupal-dialog-open-modal');

      // Restore original padding-right value for the body.
      originalBodyPad = $body.data('drupal-dialog-padding');
      $body.css('padding-right', originalBodyPad);

      $element.dialog('close');
      dialog.returnValue = value;
      dialog.open = false;
      $(window).trigger('dialog:afterclose', [dialog, $element]);
    }

    function isBodyOverflowing() {
      return document.body.clientWidth < window.innerWidth;
    }

    function getScrollbarWidth() {
      // Create the measurement node.
      var scrollDiv = document.createElement('div');
      scrollDiv.className = 'drupal-dialog-scrollbar-measure';
      document.body.appendChild(scrollDiv);
      // Get the scrollbar width.
      var width = scrollDiv.offsetWidth - scrollDiv.clientWidth;
      // Delete the DIV.
      document.body.removeChild(scrollDiv);
      return width;
    }

    function setScrollbarPadding() {
      // Add padding to the body based on how wide our scrollbar is.
      var bodyPad = parseInt(($body.css('padding-right') || 0), 10);
      if (isBodyOverflowing()) $body.css('padding-right', bodyPad + getScrollbarWidth());
    }

    dialog.show = function () {
      openDialog({
        modal: false
      });
    };

    dialog.showModal = function () {
      openDialog({
        modal: true
      });
    };

    dialog.close = closeDialog;
    return dialog;
  };
})(jQuery, Drupal, drupalSettings);
